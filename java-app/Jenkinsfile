pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "your-dockerhub-username/java-app:latest"
        SONARQUBE_URL = 'http://your-sonarqube-url:9000'
    }

    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/your-username/ci-cd-java-app.git'
            }
        }

        stage('SonarQube Scan') {
            steps {
                withSonarQubeEnv('MySonarQube') {
                    sh 'mvn clean verify sonar:sonar'
                }
            }
        }

        stage('Build App') {
            steps {
                sh 'mvn clean package'
            }
        }

        stage('Build Docker Image') {
            steps {
                sh 'docker build -t $DOCKER_IMAGE java-app/'
            }
        }

        stage('Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub-creds', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh '''
                      echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
                      docker push $DOCKER_IMAGE
                    '''
                }
            }
        }

        stage('Deploy to GitOps') {
            steps {
                sh 'echo "Assuming ArgoCD is watching manifests/"'
                sh 'git add manifests/'
                sh 'git commit -m "Update image version" || echo "No changes to commit"'
                sh 'git push'
            }
        }
    }
}

